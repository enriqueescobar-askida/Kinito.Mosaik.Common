//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace AlphaMosaik.Logger.DemoWebPart.LoggerWebService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LoggerWebServiceSoap", Namespace="http://alphamosaik.com/Logger")]
    public partial class LoggerWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddEntryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LoggerWebService() {
            this.Url = global::AlphaMosaik.Logger.DemoWebPart.Properties.Settings.Default.AlphaMosaik_Logger_DemoWebPart_LoggerWebService_LoggerWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddEntryCompletedEventHandler AddEntryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://alphamosaik.com/Logger/AddEntry", RequestNamespace="http://alphamosaik.com/Logger", ResponseNamespace="http://alphamosaik.com/Logger", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddEntry(LogEntry entry) {
            this.Invoke("AddEntry", new object[] {
                        entry});
        }
        
        /// <remarks/>
        public void AddEntryAsync(LogEntry entry) {
            this.AddEntryAsync(entry, null);
        }
        
        /// <remarks/>
        public void AddEntryAsync(LogEntry entry, object userState) {
            if ((this.AddEntryOperationCompleted == null)) {
                this.AddEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEntryOperationCompleted);
            }
            this.InvokeAsync("AddEntry", new object[] {
                        entry}, this.AddEntryOperationCompleted, userState);
        }
        
        private void OnAddEntryOperationCompleted(object arg) {
            if ((this.AddEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://alphamosaik.com/Logger")]
    public partial class LogEntry {
        
        private string messageField;
        
        private LogLevel levelField;
        
        private bool strictDateTimeEnabledField;
        
        private string productNameField;
        
        private System.DateTime timeStampField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public LogLevel Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        public bool StrictDateTimeEnabled {
            get {
                return this.strictDateTimeEnabledField;
            }
            set {
                this.strictDateTimeEnabledField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://alphamosaik.com/Logger")]
    public enum LogLevel {
        
        /// <remarks/>
        Unassigned,
        
        /// <remarks/>
        CriticalEvent,
        
        /// <remarks/>
        WarningEvent,
        
        /// <remarks/>
        InformationEvent,
        
        /// <remarks/>
        Exception,
        
        /// <remarks/>
        Assert,
        
        /// <remarks/>
        Unexpected,
        
        /// <remarks/>
        Monitorable,
        
        /// <remarks/>
        High,
        
        /// <remarks/>
        Medium,
        
        /// <remarks/>
        Verbose,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591